-- Tabela: DIM_USUARIO
CREATE TABLE DimUsuario (
    IDUsuario SERIAL PRIMARY KEY,
    EMAIL VARCHAR(255) NOT NULL,
    NOME VARCHAR(255) NOT NULL,
    SENHA VARCHAR(255) NOT NULL,
    DATANASC DATE,
    DATAENTRADA DATE
);

-- Tabela: DIM_PROFESSOR
CREATE TABLE DimProfessor (
    SN BIGINT PRIMARY KEY,
    NOME VARCHAR(255) NOT NULL,
    SENHA VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255) NOT NULL
);

-- Tabela: FACT_ADICIONAR
CREATE TABLE FactAdicionar (
    IDAdicionar BIGSERIAL PRIMARY KEY,
    IDUsuario INT NOT NULL,
    SN BIGINT NOT NULL
);

-- Tabela: DIM_CATEGORIA
CREATE TABLE DimCategoria (
    IDCategoria BIGSERIAL PRIMARY KEY,
    CATEGORIA VARCHAR(255) NOT NULL
);

-- Tabela: DIM_PRODUTO
CREATE TABLE DimProduto (
    CODIGO BIGINT PRIMARY KEY,
    NOME_BASICO VARCHAR(255) NOT NULL,
    NOME_MODIFICADOR VARCHAR(255),
    DESCRICAO_TECNICA TEXT,
    FABRICANTE VARCHAR(255),
    OBSERVACOES_ADICIONAL TEXT,
    IMAGEM BYTEA,
    UNIDADE VARCHAR(50),
    PRECO_DE_VENDA DECIMAL(10,2),
    FRAGILIDADE BOOLEAN,
    inserido_por VARCHAR(255) NOT NULL,
    RUA INT,
    COLUNA INT,
    ANDAR INT,
    ALTURA FLOAT,
    LARGURA FLOAT,
    PROFUNDIDADE FLOAT,
    PESO FLOAT
);

-- Tabela: FACT_CATEGORIA
CREATE TABLE FactCategoria (
    IDCategoriaProduto BIGSERIAL PRIMARY KEY,
    CODIGO BIGINT NOT NULL,
    IDCategoria BIGINT NOT NULL
);

-- Tabela: FACT_RECEBIMENTO
CREATE TABLE FactRecebimento (
    IDRecebimento BIGSERIAL PRIMARY KEY,
    DATA_RECEB DATE NOT NULL,
    QUANT BIGINT NOT NULL,
    CODIGO BIGINT NOT NULL,
    VALIDADE DATE NOT NULL,
    PRECO_DE_AQUISICAO DECIMAL(10,2) NOT NULL,
    LOTE VARCHAR(30) NOT NULL,
    FORNECEDOR VARCHAR(255)
);

-- Tabela: LOGINS_ATIVOS
CREATE TABLE LoginsAtivos (
    id SERIAL PRIMARY KEY,
    usuarioEmail VARCHAR(255) NOT NULL,
    loginTimestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    logoutTimestamp TIMESTAMP
);

-- Tabela: FACT_SAIDAS
CREATE TABLE FactSaidas (
    IDRecebimento SERIAL PRIMARY KEY,
    DATA_SAIDA DATE NOT NULL,
    QUANT BIGINT NOT NULL,
    LOTE VARCHAR(30) NOT NULL,
    CODIGO BIGINT NOT NULL,
    FORNECEDOR VARCHAR(255)
);

-- RELACIONAMENTOS
ALTER TABLE FactAdicionar ADD CONSTRAINT FK_Adicionar_SN FOREIGN KEY (SN) REFERENCES DimProfessor(SN);
ALTER TABLE FactAdicionar ADD CONSTRAINT FK_Adicionar_Usuario FOREIGN KEY (IDUsuario) REFERENCES DimUsuario(IDUsuario);
ALTER TABLE FactCategoria ADD CONSTRAINT FK_Categoria_Produto FOREIGN KEY (CODIGO) REFERENCES DimProduto(CODIGO);
ALTER TABLE FactCategoria ADD CONSTRAINT FK_Categoria_Categoria FOREIGN KEY (IDCategoria) REFERENCES DimCategoria(IDCategoria);
ALTER TABLE FactRecebimento ADD CONSTRAINT FK_Recebimento_Produto FOREIGN KEY (CODIGO) REFERENCES DimProduto(CODIGO);

-- INSERÇÕES INICIAIS
INSERT INTO DimProfessor (SN, NOME, SENHA, EMAIL)
VALUES (222, 'carlos', '1234', 'carlos@professor.com');

UPDATE dimusuario
SET senha = '$2b$12$RyYrGL4lZ0wQ2kJWYAcY/eqzkRrgxJ0CzU8vO0OnCjZ7n/9xdB3Me'
WHERE email = 'carlos@professor.com';


INSERT INTO DimCategoria (CATEGORIA)
VALUES ('escritorio'), ('armazem');

INSERT INTO DimProduto (
    CODIGO, NOME_BASICO, NOME_MODIFICADOR, DESCRICAO_TECNICA, FABRICANTE,
    OBSERVACOES_ADICIONAL, IMAGEM, UNIDADE, PRECO_DE_VENDA, FRAGILIDADE,
    inserido_por, RUA, COLUNA, ANDAR, ALTURA, LARGURA, PROFUNDIDADE, PESO
)
VALUES
(1, 'Produto A', 'Modificador X', 'Descrição Técnica 1', 'Fabricante 1', 'Observação 1', NULL, 'Unidade A', 10.50, TRUE, 'Usuario1', 1, 1, 1, 10, 20, 15, 10.5),
(2, 'Produto B', 'Modificador Y', 'Descrição Técnica 2', 'Fabricante 2', 'Observação 2', NULL, 'Unidade B', 20.99, FALSE, 'Usuario2', 2, 2, 2, 15, 25, 10, 2.4),
(3, 'Produto C', 'Modificador Z', 'Descrição Técnica 3', 'Fabricante 3', 'Observação 3', NULL, 'Unidade C', 30.00, TRUE, 'Usuario3', 3, 3, 3, 20, 30, 20, 0.3),
(4, 'Produto D', 'Modificador W', 'Descrição Técnica 4', 'Fabricante 4', 'Observação 4', NULL, 'Unidade D', 40.50, TRUE, 'Usuario4', 4, 4, 2, 25, 35, 25, 0.8),
(5, 'Produto E', 'Modificador V', 'Descrição Técnica 5', 'Fabricante 5', 'Observação 5', NULL, 'Unidade E', 50.99, FALSE, 'Usuario5', 1, 1, 5, 30, 40, 30, 20);

INSERT INTO FactRecebimento (DATA_RECEB, QUANT, CODIGO, VALIDADE, PRECO_DE_AQUISICAO, LOTE, FORNECEDOR)
VALUES
(NOW(), 20, 1, NOW() + INTERVAL '1 year', 5.00, 'Lote001', 'Fornecedor A'),
(NOW(), 20, 2, NOW() + INTERVAL '1 year', 10.00, 'Lote002', 'Fornecedor B'),
(NOW(), 20, 3, NOW() + INTERVAL '1 year', 15.00, 'Lote003', 'Fornecedor C'),
(NOW(), 20, 4, NOW() + INTERVAL '1 year', 20.00, 'Lote004', 'Fornecedor D'),
(NOW(), 20, 5, NOW() + INTERVAL '1 year', 25.00, 'Lote005', 'Fornecedor E');

-- VIEW ESTOQUE REAL
CREATE OR REPLACE VIEW vw_EstoqueReal AS
WITH CTE_RecebimentosAgrupados AS (
    SELECT
        CODIGO,
        DATA_RECEB,
        SUM(QUANT) AS TOTAL_QUANT_RECEB
    FROM
        FactRecebimento
    GROUP BY
        CODIGO,
        DATA_RECEB
),
CTE_SaidasAgrupadas AS (
    SELECT
        CODIGO,
        SUM(QUANT) AS TOTAL_QUANT_SAIDA
    FROM
        FactSaidas
    GROUP BY
        CODIGO
),
CTE_QuantidadesMaisRecentes AS (
    SELECT
        CODIGO,
        TOTAL_QUANT_RECEB,
        ROW_NUMBER() OVER (PARTITION BY CODIGO ORDER BY DATA_RECEB DESC) AS RowNum
    FROM
        CTE_RecebimentosAgrupados
)
SELECT
    dp.CODIGO AS codigo,
    dp.NOME_BASICO AS nome_basico,
    COALESCE(SUM(fr.QUANT), 0) - COALESCE(sa.TOTAL_QUANT_SAIDA, 0) AS quantidade,
    COALESCE(qmr.TOTAL_QUANT_RECEB, 0) AS quant_recente
FROM
    DimProduto dp
LEFT JOIN
    FactRecebimento fr ON dp.CODIGO = fr.CODIGO
LEFT JOIN
    CTE_SaidasAgrupadas sa ON dp.CODIGO = sa.CODIGO
LEFT JOIN
    CTE_QuantidadesMaisRecentes qmr ON dp.CODIGO = qmr.CODIGO AND qmr.RowNum = 1
GROUP BY
    dp.CODIGO,
    dp.NOME_BASICO,
    sa.TOTAL_QUANT_SAIDA,
    qmr.TOTAL_QUANT_RECEB;